#!/usr/bin/env node

/**
 * Environment Variables Check Script
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
 */

const requiredVars = [
  'REACT_APP_SUPABASE_URL',
  'REACT_APP_SUPABASE_ANON_KEY',
  'REACT_APP_BOT_TOKEN',
  'REACT_APP_APP_NAME',
  'REACT_APP_COMPANY_NAME',
  'REACT_APP_SUPPORT_USERNAME'
];

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...\n');

let allGood = true;
const issues = [];

requiredVars.forEach(varName => {
  const value = process.env[varName];
  
  if (!value) {
    console.log(`‚ùå ${varName}: –û–¢–°–£–¢–°–¢–í–£–ï–¢`);
    allGood = false;
    issues.push(varName);
  } else if (value.startsWith('@')) {
    console.log(`‚ö†Ô∏è  ${varName}: –°–°–´–õ–ê–ï–¢–°–Ø –ù–ê –°–ï–ö–†–ï–¢ (${value}) - –û–®–ò–ë–ö–ê!`);
    allGood = false;
    issues.push(`${varName} (secret reference)`);
  } else {
    const displayValue = varName.includes('KEY') || varName.includes('TOKEN') ? 
      value.substring(0, 10) + '...' : value;
    console.log(`‚úÖ ${varName}: ${displayValue}`);
  }
});

console.log('\n' + '='.repeat(50));

if (allGood) {
  console.log('üéâ –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ!');
  process.exit(0);
} else {
  console.log(`‚ùå –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏: ${issues.length}`);
  console.log('\nüìã –ß—Ç–æ –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å:');
  
  issues.forEach(issue => {
    if (issue.includes('secret reference')) {
      console.log(`   ‚Ä¢ ${issue.split(' ')[0]}: –ó–∞–º–µ–Ω–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ —Å–µ–∫—Ä–µ—Ç –ø—Ä—è–º—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º`);
    } else {
      console.log(`   ‚Ä¢ ${issue}: –î–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é`);
    }
  });
  
  console.log('\nüîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤ Vercel:');
  console.log('   1. Settings ‚Üí Environment Variables');
  console.log('   2. –£–¥–∞–ª–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ @secret_name');
  console.log('   3. –î–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å –ø—Ä—è–º—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏');
  console.log('   4. Redeploy –ø—Ä–æ–µ–∫—Ç');
  
  process.exit(1);
}